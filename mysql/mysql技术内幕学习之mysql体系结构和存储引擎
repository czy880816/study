# 一、定义数据库和实例

- **数据库：** 无力操作系统文件或其他形式文件类型的集合。在mysql数据库中，数据库文件可以是frm、MYD、MYI、ibd结尾的文件

- **实例：** mysql数据库由后台线程以及一个共享内存区组成。共享内存可以被运行的后台线程所共享。需要牢记的是，数据库实例才是真正用于操作数据库文件的

这两个词有时可以互换使用，不过两者的概念完全不同。在mysql数据库中，实例与数据库的关系通常是一一对应的，即一个实例对应一个数据库，一个数据库对应一个实例。但是，在集群情况下可能存在一个数据库被多个数据实例使用的情况。Mysql数据库被设计为一个单进程多线程架构的数据库，也就是说，mysql数据库实例在系统上的表现就是一个进程

总之：**从概念来说，数据库时文件的集合，是按照某种数据模型组织起来并存放于二级存储器中的数据集合；数据库实例是程序，是位于用户和操作系统之间的一层数据管理软件，用户对数据库的任何操作，包括数据库定义、数据查询、数据维护、数据库运行控制等都是在数据库实例下进行的，应用程序只有通过数据库实例才能和数据库打交道**

在macos下，如果是用homebrew安装的mysql，可以使用如下命令启动mysql服务：

```shell
ixiaojiedeMacBook-Pro:~ root# brew services start mysql
```

如下命令可以查看mysql数据库实例启动时，会在哪些位置查找配置文件：

```shell
lixiaojiedeMacBook-Pro:~ root# mysql --help | grep my.cnf
```

**需要特别注意的是：存储引擎是基于表的，而不是数据库。mysql插件式体系结构是mysql区别于其他数据库的一个最重要的特性**

##  1、InnoDB存储引擎

InnoDB存储引擎支持事物，其设计目标主要面向在线事物处理（OLTP）的应用。其特点是行锁设计、支持外键，并支持类似于Oracle的非锁定读，即磨人读物操作不会产生锁。从mysql5.5.8版本开始，InnoDB存储引擎是默认的存储引擎

InnoDB通过使用多版本并发控制（MVCC）来获的高并发性，并且实现了SQL标准的4种隔离级别，默认为REPEATABLE级别。同时，使用一种被称为next-key locking的策略来避免幻读（phantom）现象的产生。除此之外，InnoDB存储引擎还提供了插入缓冲、二次写、自适应哈希索引、预读等高性能和高可用的功能

对于表中数据的存储，InnoDB存储引擎采用了聚集的方式，因此，每张表的存储都是按照主键的顺序进行存放。如果没有显式地在表定义时指定主键，InnoDB存储引擎会为每一行生成一个6字节的ROWID，并以此为主键

## 2、MyISAM存储引擎

MyISAM存储引擎不支持事物、表锁设计、支持全文索引，主要面向一些OLAP数据库应用。在mysql5.5.8版本之前MyISAM存储引擎是默认的存储引擎。此外，MyISAM存储引擎的另一个与众不同的地方是它的缓冲池只缓存索引文件，而不缓冲数据文件，这点和大多数的数据库都非常不同

MyISAM存储引擎表由MYD和MYI组成，MYD用来存放数据文件，MYI用来存放索引文件

在mysql5.0版本之前，MyISAM默认支持的表大小为4G，如果需要支持大于4G的MyISAM表时，则需要指定MAX_ROWS和AVG_ROWS_LENGTH属性，从mysql5.0版本开始，MyISAM默认支持256TB的单表数据，这足够满足一般应用的需求

## 3、NDB存储引擎

NDB存储引擎是一个集群存储引擎，类似于Oracle的RAC集群。NDB的特点是数据全部放在内存中，因此主键查找的速度极快，并且通过添加NDB数据存储节点可以线性地提高数据库性能，是高可用、高性能的集群系统

关于NDB存储yawning，有一个问题值得注意，那就是NDB存储yawning的连接操作（JOIN）是在mysql数据库层完成的，而不是在存储引擎层完成的。这意味着，复杂的连接操作需要巨大的网络开销，因此查询速度很慢

## 4、Memory存储引擎

Memory存储引擎将表中的数据存放在内存中，如果数据库重启或者发生崩溃，表中的数据都将消失。它非常适合于存储临时数据的临时表，以及数据仓库中的纬度表。Memory存储引擎默认使用哈希索引，而不是我们舒心的B+树索引

虽然Memory存储引擎速度非常快，但是在使用上还是有一定的限制。比如，只支持表锁，并发性能差，并且不支持TEXT和BLOB列类型。最重要的是，存储变长字段时是按照定长字段的方式进行的，因此会浪费内存。

## 5、Archive存储引擎

Archive存储引擎只支持INSERT和SELECT操作。Archive存储引擎使用zlib算法将数据行进行压缩后存储，压缩比一般可达1:10。所以其非常适合存储归档数据，如日志信息。

## 6、Federated存储引擎

Federated存储引擎表不存放数据，他只是执行一台远程mysql数据库服务器上的表

## 7、Maria存储引擎

Maria存储引擎是新开发的存储引擎，设计目标是用来取代原有的MyISAM存储引擎，从而成为mysql默认的存储引擎。Maria存储引擎的特点是：支持缓存数据和索引文件，应用了行锁设计，提供了MVCC功能，支持事物和非事物安全的选项，以及更好的BLOB字符类型的处理性能

可以通过SHOW ENGINES语句查询查看当前使用的mysql数据库锁支持的存储引擎

```sql
mysql> show engines\G;
```

# 二、连接mysql

连接mysql操作是一个连接进程和mysql数据库实例进行通信。从程序设计的角度来讲，本质上是进程通信。如果对进程通信比较了解，可以知道常用的进程通信方式有管道、命名管道、命名字、TCP/IP套接字、UNIX域套接字等

## 1、TCP/IP

TCP/IP套接字方式是mysql数据库在任何平台下都提供的连接方式，也是网络中使用的最多的一种方式。这里需要注意的是，再通过TCP/IP连接到mysql实例时，mysql数据库会先检查一张权限视图，用来判断发起请求的客户端IP是否允许连接到mysql实例，该视图在mysql架构下，表名为user，此外，还给出了某用户在各个网段下的访问控制权限（注意：需要选择mysql库）

## 2、命名管道和共享内存

在Windows平台上，如果两个需要进程通信的进程在同一个服务器上，那么可以使用命名管道。在mysql数据库中需在配置文件中启用--enable-named-pipe选项，此外，在mysql4.1版本后，mysql还提供了共享内存的连接方式，这是通过在配置文件中添加--shared-memory实现的。如果想使用共享内存的方式，在连接时，mysql客户端还必须使用--protocol=memory选项

## 3、UNIX域套接字

在linux和unit环境下，可以使用UNIX域套接字。UNIX域套接字其实不是一个网络协议，所以只能在mysql客户端和数据库实例在一台服务器上的情况下使用